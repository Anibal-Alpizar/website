---
interface Props {
  class?: string;
}

const { class: className } = Astro.props;
---

<div class={`card ${className}`}>
  <div class="card-content">
    <slot />
  </div>
</div>

<style>
  .card {
    position: relative;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden;
    background-color: var(--card-background);
  }

  .card::before,
  .card::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 8px;
    pointer-events: none;
  }

  .card::before {
    z-index: 2;
  }

  .card::after {
    z-index: 1;
  }

  .card:hover {
    border-color: var(--card-border-hover);
  }

  [data-theme="dark"] .card:hover {
    border-color: var(--card-border-hover-dark);
  }

  .card:hover::before {
    background: radial-gradient(
      600px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-light),
      transparent 40%
    );
  }

  .card:hover::after {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-light),
      transparent 60%
    );
    filter: blur(20px);
  }

  [data-theme="dark"] .card:hover::before {
    background: radial-gradient(
      600px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-dark),
      transparent 40%
    );
  }

  [data-theme="dark"] .card:hover::after {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-dark),
      transparent 60%
    );
    filter: blur(20px);
  }

  .card-content {
    padding: 1.5rem;
    position: relative;
    z-index: 3;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll<HTMLElement>(".card");

    cards.forEach((card) => {
      card.addEventListener("mousemove", (e) => {
        const event = e as MouseEvent;
        const rect = card.getBoundingClientRect();
        const x = event.clientX - rect.left;
        const y = event.clientY - rect.top;

        card.style.setProperty("--mouse-x", `${x}px`);
        card.style.setProperty("--mouse-y", `${y}px`);
      });
    });
  });
</script>