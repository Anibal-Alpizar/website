---
import Section from "../commons/Section.astro";
import NestJS from "../../icons/NestJS.astro";
import NextJS from "../../icons/NextJS.astro";
import TailwindCSS from "../../icons/TailwindCSS.astro";
import ShadcnUI from "../../icons/ShadcnUI.astro";
import TypeScript from "../../icons/TypeScript.astro";
import Maps from "../../icons/Map.astro";
import Xml from "../../icons/Xml.astro";
import Landing from "../../icons/Landing.astro";

const projects = [
  {
    title: "API GEO CR",
    description: "API for Costa Rica's provinces, cantons, and districts.",
    url: "https://api-geo-cr.vercel.app",
    github: "https://github.com/anibalalpizar/api-geo-cr",
    icon: Maps,
    technologies: [
      { icon: NestJS, name: "NestJS" },
      { icon: TypeScript, name: "TypeScript" },
    ],
  },
  {
    title: "JSON to XML",
    description: "Easily convert JSON to XML with a modern UI.",
    url: "https://json-to-xml.vercel.app",
    github: "https://github.com/anibalalpizar/json-to-xml-converter",
    icon: Xml,
    technologies: [
      { icon: NextJS, name: "Next.js 15" },
      { icon: TailwindCSS, name: "TailwindCSS" },
      { icon: ShadcnUI, name: "shadcn/ui" },
      { icon: TypeScript, name: "TypeScript" },
    ],
  },
  {
    title: "Next.js Landing Page",
    description: "Open-source landing page built with Next.js and Shadcn UI.",
    url: "https://nextjs-shadcn-landing.vercel.app",
    github: "https://github.com/anibalalpizar/nextjs-shadcn-landing",
    icon: Landing,
    technologies: [
      { icon: NextJS, name: "Next.js" },
      { icon: TailwindCSS, name: "TailwindCSS" },
      { icon: ShadcnUI, name: "shadcn/ui" },
      { icon: TypeScript, name: "TypeScript" },
    ],
  },
];
---

<Section title="Personal Projects">
  <div class="projects-grid">
    {
      projects.map((project) => (
        <article class="project-card">
          <div class="card-content">
            <h3>
              <span class="icon">
                <project.icon /> {/* Renderiza el ícono del proyecto */}
              </span>
              {project.title}
            </h3>
            <p>{project.description}</p>
            <div class="tech-stack">
              {project.technologies.map(({ icon: Icon, name }) => (
                <div class="tech-item" title={name}>
                  <Icon />
                </div>
              ))}
            </div>
            <div class="links">
              <a href={project.url} target="_blank" rel="noopener noreferrer">
                Live Demo →
              </a>
              {project.github && (
                <a
                  href={project.github}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  GitHub →
                </a>
              )}
            </div>
          </div>
        </article>
      ))
    }
  </div>
</Section>

<style>
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
  }

  .project-card {
    position: relative;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden;
    background-color: var(--card-background);
  }

  .project-card::before,
  .project-card::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 8px;
    pointer-events: none;
  }

  .project-card::before {
    z-index: 2;
  }

  .project-card::after {
    z-index: 1;
  }

  .project-card:hover {
    border-color: var(--card-border-hover);
  }

  [data-theme="dark"] .project-card:hover {
    border-color: var(--card-border-hover-dark);
  }

  .project-card:hover::before {
    background: radial-gradient(
      600px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-light),
      transparent 40%
    );
  }

  .project-card:hover::after {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-light),
      transparent 60%
    );
    filter: blur(20px);
  }

  [data-theme="dark"] .project-card:hover::before {
    background: radial-gradient(
      600px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-dark),
      transparent 40%
    );
  }

  [data-theme="dark"] .project-card:hover::after {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      var(--card-hover-dark),
      transparent 60%
    );
    filter: blur(20px);
  }

  .card-content {
    padding: 1rem;
    position: relative;
    z-index: 3;
  }

  h3 {
    display: flex;
    align-items: center;
    justify-content: left;
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
    color: var(--text-main);
    gap: 0.5rem;
  }

  p {
    font-size: 0.9rem;
    line-height: 1.5;
    margin-bottom: 1rem;
    color: var(--text-secondary);
  }

  .tech-stack {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .tech-item {
    display: flex;
    align-items: center;
    color: var(--text-main);
  }

  .links {
    display: flex;
    gap: 1rem;
  }

  .links a {
    color: var(--text-main);
    text-decoration: none;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    opacity: 0;
    transform: translateX(-10px);
  }

  .project-card:hover .links a {
    opacity: 1;
    transform: translateX(0);
  }

  .links a:hover {
    color: var(--text-secondary);
  }

  @media (max-width: 700px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll(".project-card");

    cards.forEach((card) => {
      card.addEventListener("mousemove", (e) => {
        const rect = card.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;

        card.style.setProperty("--mouse-x", `${x}px`);
        card.style.setProperty("--mouse-y", `${y}px`);
      });
    });
  });
</script>
