---
import { GithubIcon, LinkedinIcon, DownloadIcon } from "../icons"
---

<div class="command-palette" id="command-palette">
  <div class="command-palette-overlay"></div>
  <div class="command-palette-modal">
    <div class="command-palette-header">
      <input
        type="text"
        placeholder="Search commands, or press Esc to close..."
        class="command-palette-input"
      />
    </div>
    <div class="command-palette-content">
      <div class="command-group">
        <div class="command-group-heading">Navigation</div>
        <button class="command-item" data-url="/">
          <span>Go to Home</span>
        </button>
        <button class="command-item" data-url="/about">
          <span>Go to About</span>
        </button>
        <button class="command-item" data-url="/projects">
          <span>View All Projects</span>
        </button>
      </div>

      <div class="command-group">
        <div class="command-group-heading">Experience</div>
        <button
          class="command-item"
          data-url="/2024/internship-at-tech-solutions"
        >
          <span>Internship at Tech Solutions</span>
        </button>
        <button
          class="command-item"
          data-url="/2024/microsoft-student-ambassador"
        >
          <span>Microsoft Student Ambassador</span>
        </button>
        <button
          class="command-item"
          data-url="/2023/inventory-management-system-for-non-profit"
        >
          <span>Inventory Management System</span>
        </button>
        <button
          class="command-item"
          data-url="/2022/medical-prescription-app-development"
        >
          <span>Medical Prescription App</span>
        </button>
      </div>

      <div class="command-group">
        <div class="command-group-heading">Social</div>
        <button
          class="command-item"
          data-url="https://github.com/anibalalpizar"
        >
          <GithubIcon />
          <span>Visit GitHub</span>
        </button>
        <button
          class="command-item"
          data-url="https://www.linkedin.com/in/anibalalpizar/"
        >
          <LinkedinIcon />
          <span>Visit LinkedIn</span>
        </button>
      </div>

      <div class="command-group">
        <div class="command-group-heading">Actions</div>
        <a class="command-item" href="/AnÃ­bal_CV.pdf" download>
          <DownloadIcon />
          <span>Download CV</span>
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  let isOpen = false

  function setupCommandPalette() {
    const commandPalette = document.getElementById("command-palette")
    const overlay = commandPalette?.querySelector(".command-palette-overlay")
    const input = commandPalette?.querySelector(".command-palette-input")
    const items = commandPalette?.querySelectorAll(".command-item")

    function togglePalette(show: boolean | undefined) {
      isOpen = show ?? !isOpen
      if (commandPalette) {
        commandPalette.style.display = isOpen ? "block" : "none"
        if (isOpen) {
          ;(input as HTMLInputElement)?.focus()
        }
      }
    }

    function handleKeydown(e: {
      key: string
      metaKey: any
      ctrlKey: any
      preventDefault: () => void
    }) {
      if (e.key === "k" && (e.metaKey || e.ctrlKey)) {
        e.preventDefault()
        togglePalette(true)
      } else if (e.key === "Escape" && isOpen) {
        togglePalette(false)
      }
    }

    overlay?.addEventListener("click", () => togglePalette(false))

    items?.forEach((item) => {
      item.addEventListener("click", () => {
        const url = item.getAttribute("data-url")
        if (url) {
          if (url.startsWith("http")) {
            window.open(url, "_blank")
          } else {
            window.location.href = url
          }
        }
        togglePalette(false)
      })
    })

    input?.addEventListener("input", (e) => {
      const value = (e.target as HTMLInputElement).value.toLowerCase()
      items?.forEach((item) => {
        const text = item.textContent?.toLowerCase() || ""
        ;(item as HTMLElement).style.display = text.includes(value)
          ? "flex"
          : "none"
      })
    })

    document.addEventListener("keydown", handleKeydown)

    document
      .getElementById("open-command-palette")
      ?.addEventListener("click", () => {
        togglePalette(true)
      })
  }

  document.addEventListener("DOMContentLoaded", setupCommandPalette)
</script>

<style>
  .command-palette {
    display: none;
    position: fixed;
    inset: 0;
    z-index: 100;
  }

  .command-palette-overlay {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    animation: fadeIn 0.15s ease-out;
  }

  .command-palette-modal {
    position: fixed;
    top: 20%;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    max-width: 600px;
    background: var(--card-background);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    animation: slideIn 0.15s ease-out;
  }

  .command-palette-header {
    padding: 1rem;
    border-bottom: 1px solid var(--border-color);
  }

  .command-palette-input {
    width: 100%;
    padding: 0.5rem;
    background: transparent;
    border: none;
    outline: none;
    font-size: 1rem;
    color: var(--text-main);
  }

  .command-palette-content {
    padding: 1rem;
    max-height: 400px;
    overflow-y: auto;
  }

  .command-group:not(:last-child) {
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
  }

  .command-group-heading {
    font-size: 0.8rem;
    font-weight: 500;
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
    padding-left: 0.5rem;
  }

  .command-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    width: 100%;
    padding: 0.5rem;
    background: transparent;
    border: none;
    border-radius: 4px;
    color: var(--text-main);
    font-size: 0.9rem;
    text-align: left;
    cursor: pointer;
    transition: background-color 0.15s ease;
  }

  .command-item:hover {
    background-color: #ddd;
    color: #1f2937;
  }

  [data-theme="dark"] .command-item:hover {
    background-color: #ddd;
    color: #e5e7eb;
  }

  [data-theme="light"] .command-item:hover {
    background-color: #ddd;
    color: #1f2937;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(-50%) translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }
  }
</style>
