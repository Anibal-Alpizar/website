---
import Layout from "../layouts/Layout.astro"
import Section from "../components/commons/Section.astro"
import ProjectCard from "../components/projects/ProjectCard.astro"
import { projects } from "../data/projects.json"
import SearchBar from "../components/projects/SearchBar.astro"
import CategoryFilter from "../components/projects/CategoryFilter.astro"
import { getProjectCategories } from "../utils/getProjectCategories"
---

<Layout title="Projects - Aníbal Alpízar">
  <main>
    <Section>
      <h1>Projects</h1>
      <SearchBar />
      <CategoryFilter />
      <div class="projects-grid" id="projects-grid">
        {
          projects.map((project) => (
            <div
              class="project-item"
              data-categories={getProjectCategories(project)}
            >
              <ProjectCard {...project} />
            </div>
          ))
        }
      </div>
    </Section>
  </main>
</Layout>

<script>
  const searchInput = document.querySelector("#search") as HTMLInputElement
  const projectsGrid = document.querySelector("#projects-grid")
  const filterButtons = document.querySelectorAll(".filter-button")
  let currentCategory = "all"
  let searchTerm = ""

  function updateProjectVisibility() {
    if (!projectsGrid) return

    const projects = projectsGrid.children
    Array.from(projects).forEach((project) => {
      const title =
        project.querySelector("h3")?.textContent?.toLowerCase() || ""
      const description =
        project.querySelector("p")?.textContent?.toLowerCase() || ""
      const technologies = Array.from(project.querySelectorAll(".badge span"))
        .map((span) => span.textContent?.toLowerCase())
        .join(" ")
      const categories =
        (project as HTMLElement).dataset.categories?.split(",") || []

      const matchesSearch =
        searchTerm === "" ||
        title.includes(searchTerm) ||
        description.includes(searchTerm) ||
        technologies.includes(searchTerm)

      const matchesCategory =
        currentCategory === "all" || categories.includes(currentCategory)

      ;(project as HTMLElement).style.display =
        matchesSearch && matchesCategory ? "block" : "none"
    })
  }

  if (searchInput) {
    searchInput.addEventListener("input", (e) => {
      searchTerm = (e.target as HTMLInputElement).value.toLowerCase()
      updateProjectVisibility()
    })
  }

  filterButtons.forEach((button) => {
    button.addEventListener("click", () => {
      filterButtons.forEach((btn) => btn.setAttribute("aria-pressed", "false"))
      button.setAttribute("aria-pressed", "true")
      currentCategory = button.getAttribute("data-category") || "all"
      updateProjectVisibility()
    })
  })
</script>

<style>
  main {
    max-width: 800px;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  h1 {
    font-size: 2rem;
    margin-bottom: 2rem;
    color: var(--text-main);
  }

  .projects-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  @media (max-width: 768px) {
    main {
      padding: 0 1rem;
    }
  }
</style>
